# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-08-07 22:13
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('conjugation', '0069_auto_20200623_1817'),
    ]

    operations = [
        migrations.CreateModel(
            name='Except',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blank', models.BooleanField(default=False, verbose_name='Empty')),
                ('etre', models.CharField(blank=True, choices=[('etre', 'Etre'), ('avoir', 'Avoir')], max_length=10, null=True, verbose_name='"Etre" or "Avoir"')),
                ('pattern_1', models.CharField(blank=True, max_length=100, null=True, verbose_name='Regex Before')),
                ('replace_to_1', models.CharField(blank=True, max_length=100, null=True, verbose_name='Replace To Before')),
                ('pattern_2', models.CharField(blank=True, max_length=100, null=True, verbose_name='Regex After')),
                ('replace_to_2', models.CharField(blank=True, max_length=100, null=True, verbose_name='Replace To After')),
                ('pattern_verb', models.CharField(blank=True, max_length=100, null=True, verbose_name='Regex Verb')),
                ('replace_to_verb', models.CharField(blank=True, max_length=100, null=True, verbose_name='Replace To Verb')),
                ('conjugation_override', models.CharField(blank=True, choices=[('VERB_INFINITIVE', 'VERB_INFINITIVE'), ('VERB_PRESENT_1', 'VERB_PRESENT_1'), ('VERB_PRESENT_2', 'VERB_PRESENT_2'), ('VERB_PRESENT_3', 'VERB_PRESENT_3'), ('VERB_PRESENT_4', 'VERB_PRESENT_4'), ('VERB_PRESENT_5', 'VERB_PRESENT_5'), ('VERB_PRESENT_6', 'VERB_PRESENT_6'), ('VERB_IMPERFECT_1', 'VERB_IMPERFECT_1'), ('VERB_IMPERFECT_2', 'VERB_IMPERFECT_2'), ('VERB_IMPERFECT_3', 'VERB_IMPERFECT_3'), ('VERB_IMPERFECT_4', 'VERB_IMPERFECT_4'), ('VERB_IMPERFECT_5', 'VERB_IMPERFECT_5'), ('VERB_IMPERFECT_6', 'VERB_IMPERFECT_6'), ('VERB_FUTURE_1', 'VERB_FUTURE_1'), ('VERB_FUTURE_2', 'VERB_FUTURE_2'), ('VERB_FUTURE_3', 'VERB_FUTURE_3'), ('VERB_FUTURE_4', 'VERB_FUTURE_4'), ('VERB_FUTURE_5', 'VERB_FUTURE_5'), ('VERB_FUTURE_6', 'VERB_FUTURE_6'), ('VERB_SIMPLE_PAST_1', 'VERB_SIMPLE_PAST_1'), ('VERB_SIMPLE_PAST_2', 'VERB_SIMPLE_PAST_2'), ('VERB_SIMPLE_PAST_3', 'VERB_SIMPLE_PAST_3'), ('VERB_SIMPLE_PAST_4', 'VERB_SIMPLE_PAST_4'), ('VERB_SIMPLE_PAST_5', 'VERB_SIMPLE_PAST_5'), ('VERB_SIMPLE_PAST_6', 'VERB_SIMPLE_PAST_6'), ('VERB_SUBJUNCTIVE_PRESENT_1', 'VERB_SUBJUNCTIVE_PRESENT_1'), ('VERB_SUBJUNCTIVE_PRESENT_2', 'VERB_SUBJUNCTIVE_PRESENT_2'), ('VERB_SUBJUNCTIVE_PRESENT_3', 'VERB_SUBJUNCTIVE_PRESENT_3'), ('VERB_SUBJUNCTIVE_PRESENT_4', 'VERB_SUBJUNCTIVE_PRESENT_4'), ('VERB_SUBJUNCTIVE_PRESENT_5', 'VERB_SUBJUNCTIVE_PRESENT_5'), ('VERB_SUBJUNCTIVE_PRESENT_6', 'VERB_SUBJUNCTIVE_PRESENT_6'), ('VERB_SUBJUNCTIVE_IMPERFECT_1', 'VERB_SUBJUNCTIVE_IMPERFECT_1'), ('VERB_SUBJUNCTIVE_IMPERFECT_2', 'VERB_SUBJUNCTIVE_IMPERFECT_2'), ('VERB_SUBJUNCTIVE_IMPERFECT_3', 'VERB_SUBJUNCTIVE_IMPERFECT_3'), ('VERB_SUBJUNCTIVE_IMPERFECT_4', 'VERB_SUBJUNCTIVE_IMPERFECT_4'), ('VERB_SUBJUNCTIVE_IMPERFECT_5', 'VERB_SUBJUNCTIVE_IMPERFECT_5'), ('VERB_SUBJUNCTIVE_IMPERFECT_6', 'VERB_SUBJUNCTIVE_IMPERFECT_6'), ('VERB_CONDITIONAL_PRESENT_1', 'VERB_CONDITIONAL_PRESENT_1'), ('VERB_CONDITIONAL_PRESENT_2', 'VERB_CONDITIONAL_PRESENT_2'), ('VERB_CONDITIONAL_PRESENT_3', 'VERB_CONDITIONAL_PRESENT_3'), ('VERB_CONDITIONAL_PRESENT_4', 'VERB_CONDITIONAL_PRESENT_4'), ('VERB_CONDITIONAL_PRESENT_5', 'VERB_CONDITIONAL_PRESENT_5'), ('VERB_CONDITIONAL_PRESENT_6', 'VERB_CONDITIONAL_PRESENT_6'), ('VERB_IMPERATIVE_PRESENT_II_S', 'VERB_IMPERATIVE_PRESENT_II_S'), ('VERB_IMPERATIVE_PRESENT_I_P', 'VERB_IMPERATIVE_PRESENT_I_P'), ('VERB_IMPERATIVE_PRESENT_II_P', 'VERB_IMPERATIVE_PRESENT_II_P'), ('VERB_PRESENT_PARTICIPLE', 'VERB_PRESENT_PARTICIPLE'), ('VERB_PAST_PARTICIPLE_S_M', 'VERB_PAST_PARTICIPLE_S_M'), ('VERB_PAST_PARTICIPLE_S_F', 'VERB_PAST_PARTICIPLE_S_F'), ('VERB_PAST_PARTICIPLE_P_M', 'VERB_PAST_PARTICIPLE_P_M'), ('VERB_PAST_PARTICIPLE_P_F', 'VERB_PAST_PARTICIPLE_P_F')], max_length=64, null=True)),
                ('male_gender', models.BooleanField(default=True)),
                ('feminine_gender', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=1)),
                ('infinitive_present', models.BooleanField(verbose_name='Infinitif Present')),
                ('infinitive_past', models.BooleanField(verbose_name='Infinitif Passé')),
                ('indicative_present', models.BooleanField(verbose_name='Indicatif Present')),
                ('indicative_composé-past', models.BooleanField(verbose_name='Indicatif Passe Compose')),
                ('indicative_imperfect', models.BooleanField(verbose_name='Indicatif Imparfait')),
                ('indicative_pluperfect', models.BooleanField(verbose_name='Indicatif Plus Que Parfait')),
                ('indicative_simple-past', models.BooleanField(verbose_name='Indicatif Passe Simple')),
                ('indicative_antérieur-past', models.BooleanField(verbose_name='Indicatif Passe Antérieur')),
                ('indicative_future', models.BooleanField(verbose_name='Indicatif Future Simple')),
                ('indicative_antérieur-future', models.BooleanField(verbose_name='Indicatif Future Antérieur')),
                ('subjunctive_present', models.BooleanField(verbose_name='Subjonctif Present')),
                ('subjunctive_past', models.BooleanField(verbose_name='Subjonctif Passé')),
                ('subjunctive_imperfect', models.BooleanField(verbose_name='Subjonctif Imparfait')),
                ('subjunctive_pluperfect', models.BooleanField(verbose_name='Subjonctif Plus Que Parfait')),
                ('conditional_present', models.BooleanField(verbose_name='Conditionnel Present')),
                ('conditional_past', models.BooleanField(verbose_name='Conditionnel Passé')),
                ('imperative_present', models.BooleanField(verbose_name='Impératif Present')),
                ('imperative_past', models.BooleanField(verbose_name='Impératif Passé')),
                ('participle_present', models.BooleanField(verbose_name='Participe Present')),
                ('participle_past', models.BooleanField(verbose_name='Participe Passé')),
                ('gerund_present', models.BooleanField(verbose_name='Gérondif Present')),
                ('gerund_past', models.BooleanField(verbose_name='Gérondif Passé')),
                ('person_1', models.BooleanField(verbose_name='person_I_S')),
                ('person_2', models.BooleanField(verbose_name='person_II_S')),
                ('person_3', models.BooleanField(verbose_name='person_III_S')),
                ('person_4', models.BooleanField(verbose_name='person_I_P')),
                ('person_5', models.BooleanField(verbose_name='person_II_P')),
                ('person_6', models.BooleanField(verbose_name='person_III_P')),
                ('person_pp_1', models.BooleanField(verbose_name='Singular Past Participle')),
                ('person_pp_2', models.BooleanField(verbose_name='Plural Past Participle')),
                ('person_pp_3', models.BooleanField(verbose_name='Compose Past Participle')),
                ('active', models.BooleanField(verbose_name='ACTIVE')),
                ('pronominal', models.BooleanField(verbose_name='REFLEXIVE')),
                ('voix_passive', models.BooleanField(verbose_name='PASSIVE')),
                ('question', models.BooleanField(verbose_name='QUESTION')),
                ('negation', models.BooleanField(verbose_name='NEGATIVE')),
                ('pronominal_en', models.BooleanField(verbose_name='S_EN')),
                ('question_pronominal', models.BooleanField(verbose_name='QUESTION_REFLEXIVE')),
                ('pronominal_negation', models.BooleanField(verbose_name='REFLEXIVE_NEGATIVE')),
                ('question_voix_passive', models.BooleanField(verbose_name='QUESTION_PASSIVE')),
                ('negation_voix_passive', models.BooleanField(verbose_name='NEGATIVE_PASSIVE')),
                ('question_negation', models.BooleanField(verbose_name='QUESTION_NEGATIVE')),
                ('question_pronominal_en', models.BooleanField(verbose_name='QUESTION_S_EN')),
                ('pronominal_en_negation', models.BooleanField(verbose_name='S_EN_NEGATIVE')),
                ('question_pronominal_negation', models.BooleanField(verbose_name='QUESTION_REFLEXIVE_NEGATIVE')),
                ('question_negation_voix_passive', models.BooleanField(verbose_name='QUESTION_NEGATIVE_PASSIVE')),
                ('question_pronominal_en_negation', models.BooleanField(verbose_name='QUESTION_S_EN_NEGATIVE')),
                ('verbs', models.ManyToManyField(related_name='exceptions', to='conjugation.Verb')),
            ],
        ),
    ]
